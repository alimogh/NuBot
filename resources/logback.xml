<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<property scope="context" name="logfolder" value="logs" />

	<!-- timestamp var used for log session folder -->
	<timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/>

	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>
				%date{HH:mm:ss.SSS} %logger{16} %line %-5level - %msg%n
			</Pattern>

		</layout>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>

		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>
					return logger.contains("jetty");
				</expression>
			</evaluator>
			<onMatch>DENY</onMatch>
			<onMismatch>NEUTRAL</onMismatch>
		</filter>

	</appender>

	<appender name="mainFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="ch.qos.logback.classic.html.HTMLLayout">
				<pattern>%date{HH:mm:ss.SSS}%level%line%logger{16}%msg</pattern>
			</layout>
		</encoder>
		<file>${logfolder}/current/${bySecond}/standard.html</file>

		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10MB</maxFileSize>
		</triggeringPolicy>

		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>logs/verbose.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>


	</appender>

	<appender name="allFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

		<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
			<layout class="ch.qos.logback.classic.html.HTMLLayout">
				<pattern>%date{HH:mm:ss.SSS}%level%line%logger%msg</pattern>
			</layout>
		</encoder>
		<file>${logfolder}/current/${bySecond}/verbose.html</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>logs/verbose.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>10</maxIndex>
		</rollingPolicy>

		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>50MB</maxFileSize>
		</triggeringPolicy>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>

		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>
					return logger.contains("jetty");
				</expression>
			</evaluator>
			<onMatch>DENY</onMatch>
			<onMismatch>NEUTRAL</onMismatch>
		</filter>


	</appender>

	<appender name="sessionFile" class="ch.qos.logback.core.FileAppender">

		<encoder>
			<pattern>%msg%n
			</pattern>
		</encoder>

		<file>${logfolder}/session.log</file>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>TRACE</level>
		</filter>

		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator>
				<expression>
					return logger.contains("SessionLOG");
				</expression>
			</evaluator>
			<onMatch>NEUTRAL</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

	</appender>


	<root level="debug">
		<appender-ref ref="sessionFile" />
		<appender-ref ref="allFILE" />
		<appender-ref ref="mainFILE" />
		<appender-ref ref="STDOUT" />
	</root>



	<!-- to surpress logback startup messages -->
	<statusListener class="ch.qos.logback.core.status.NopStatusListener" />

</configuration>
